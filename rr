#include <stdio.h>

struct process {
    int id;
    int arrival_time;
    int burst_time;
    int completion_time;
    int turnaround_time;
    int waiting_time;
};

int main() {
    int n, tq, i, j, time = 0, total_bt = 0;
    float avg_waiting_time = 0, avg_turnaround_time = 0;
    struct process p[10], temp;
    
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    
    printf("Enter the time quantum: ");
    scanf("%d", &tq);
    
    for (i = 0; i < n; i++) {
        printf("Enter the arrival time and burst time for process P%d: ", i);
        scanf("%d %d", &p[i].arrival_time, &p[i].burst_time);
        p[i].id = i;
        total_bt += p[i].burst_time;
    }
    
    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (p[i].arrival_time > p[j].arrival_time) {
                temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }
    
    for (i = 0; i < n; i++) {
        p[i].completion_time = -1;
    }
    
    while (total_bt > 0) {
        for (i = 0; i < n; i++) {
            if (p[i].burst_time > 0) {
                if (p[i].burst_time <= tq) {
                    time += p[i].burst_time;
                    total_bt -= p[i].burst_time;
                    p[i].burst_time = 0;
                    p[i].completion_time = time;
                }
                else {
                    time += tq;
                    total_bt -= tq;
                    p[i].burst_time -= tq;
                }
            }
        }
    }
    
    printf("ID\tAT\tBT\tCT\tTAT\tWT\n");
    for (i = 0; i < n; i++) {
        p[i].turnaround_time = p[i].completion_time - p[i].arrival_time;
        p[i].waiting_time = p[i].turnaround_time - p[i].burst_time;
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n", p[i].id, p[i].arrival_time, p[i].burst_time, p[i].completion_time, p[i].turnaround_time, p[i].waiting_time);
        avg_waiting_time += p[i].waiting_time;
        avg_turnaround_time += p[i].turnaround_time;
    }
    
    avg_waiting_time /= n;
    avg_turnaround_time /= n;
    
    printf("Average Waiting Time: %.2f\n", avg_waiting_time);
    printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);
    
    return 0;
}
