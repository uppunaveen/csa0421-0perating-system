#include <stdio.h>
#include <stdbool.h>

#define MAX_FRAMES 10

int main() {
    int pages[MAX_FRAMES], frames[MAX_FRAMES], n, i, j, k, lru_index, page_faults = 0, count = 0;
    bool is_duplicate;

    // Initialize frames with -1 to indicate they are empty
    for (i = 0; i < MAX_FRAMES; i++) {
        frames[i] = -1;
    }

    printf("Enter the number of pages: ");
    scanf("%d", &n);

    printf("Enter the page sequence: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &pages[i]);
    }

    printf("\nPage   Frames\n");
    for (i = 0; i < n; i++) {
        printf("%d\t", pages[i]);

        // Check if page is already in frames
        is_duplicate = false;
        for (j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] == pages[i]) {
                is_duplicate = true;
                break;
            }
        }

        if (!is_duplicate) {
            // Find the least recently used page in the frames
            lru_index = -1;
            for (j = 0; j < MAX_FRAMES; j++) {
                bool found = false;
                for (k = i - 1; k >= 0; k--) {
                    if (frames[j] == pages[k]) {
                        found = true;
                        count = i - k;
                        break;
                    }
                }
                if (!found) {
                    lru_index = j;
                    break;
                }
            }

            // Replace the least recently used page in the frames with the current page
            frames[lru_index] = pages[i];
            page_faults++;
        }

        // Print current frames
        for (k = 0; k < MAX_FRAMES; k++) {
            printf("%d ", frames[k]);
        }
        printf("\n");
    }

    printf("\nTotal page faults = %d\n", page_faults);
    return 0;
}
